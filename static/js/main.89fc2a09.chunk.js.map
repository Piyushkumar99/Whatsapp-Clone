{"version":3,"sources":["firebase.js","SidebarChat.js","StateProvider.js","Sidebar.js","Chat.js","reducer.js","Login.js","App.js","reportWebVitals.js","index.js"],"names":["db","firebase","initializeApp","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","measurementId","firestore","auth","provider","GoogleAuthProvider","SidebarChat","addNewChat","name","id","useState","seed","setSeed","messages","setMessages","useEffect","collection","doc","orderBy","onSnapshot","snapshot","docs","map","data","Math","floor","random","onClick","roomName","prompt","add","className","to","Avatar","src","message","StateContext","createContext","StateProvider","reducer","initialState","children","Provider","value","useReducer","useStateValue","useContext","Sidebar","rooms","setRooms","user","photoURL","IconButton","placeholder","type","room","Chat","input","setInput","roomId","useParams","setRoomName","Date","length","timestamp","toDate","toUTCString","AttachFile","displayName","onChange","e","target","preventDefault","FieldValue","serverTimestamp","actionTypes","state","action","Login","dispatch","alt","Button","signInWithPopup","then","result","catch","err","alert","App","path","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.89fc2a09.chunk.js","sourcesContent":["import firebase from \"firebase\";\r\n\r\nconst firebaseConfig = {\r\n    apiKey: \"AIzaSyAz_kjVkTHwWnblpEtKfQ8BmmebHeTOa34\",\r\n    authDomain: \"whatsapp-clone-7310d.firebaseapp.com\",\r\n    projectId: \"whatsapp-clone-7310d\",\r\n    storageBucket: \"whatsapp-clone-7310d.appspot.com\",\r\n    messagingSenderId: \"346904842624\",\r\n    appId: \"1:346904842624:web:1d730c4fd418c6e114f165\",\r\n    measurementId: \"G-JNT1PHR770\"\r\n};\r\n\r\nconst firebaseApp = firebase.initializeApp(firebaseConfig);\r\n\r\nconst db = firebaseApp.firestore();\r\nconst auth = firebase.auth();\r\nconst provider = new firebase.auth.GoogleAuthProvider();\r\n\r\nexport { auth, provider };\r\nexport default db;","import { Avatar } from '@material-ui/core';\r\nimport React, { useEffect, useState } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport db from './firebase';\r\nimport \"./SidebarChat.css\";\r\n\r\nfunction SidebarChat({ addNewChat, name, id }) {\r\n    const [seed, setSeed] = useState(\"\");\r\n    const [messages, setMessages] = useState(\"\");\r\n\r\n    useEffect(() => {\r\n        if(id) {\r\n            db.collection(\"rooms\")\r\n            .doc(id)\r\n            .collection(\"messages\")\r\n            .orderBy(\"timestamp\", \"desc\")\r\n            .onSnapshot(snapshot => (\r\n                setMessages(snapshot.docs.map((doc) => doc.data()))\r\n            ));\r\n        }\r\n    }, [id]);\r\n\r\n    useEffect(() => {\r\n        setSeed(Math.floor(Math.random() * 5000));\r\n    }, []);\r\n\r\n    const createChat = () => {\r\n        const roomName = prompt(\"Please enter the name for chat room\");\r\n\r\n        if(roomName){\r\n            db.collection(\"rooms\").add({\r\n                name: roomName,\r\n            });\r\n        }\r\n    };\r\n\r\n    return !addNewChat ? (\r\n        <Link to={`/rooms/${id}`}>\r\n            <div className=\"sidebarChat\">\r\n                <Avatar src={`https://avatars.dicebear.com/api/human/${seed}.svg`} />\r\n                <div className=\"sidebarChat__info\">\r\n                    <h2>{name}</h2>\r\n                    <p>{messages[0]?.message}</p>\r\n                </div>\r\n            </div>\r\n        </Link>\r\n    ) : (\r\n        <div onClick={createChat} className=\"sidebarChat\">\r\n            <h2>Add New Chat</h2>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default SidebarChat;\r\n","import React, { createContext, useContext, useReducer } from 'react';\r\n\r\nexport const StateContext = createContext();\r\n\r\nexport const StateProvider = ({ reducer, initialState, children}) => (\r\n    <StateContext.Provider value={useReducer(reducer,initialState)}>\r\n        {children}\r\n    </StateContext.Provider>\r\n);\r\n\r\nexport const useStateValue = () => useContext(StateContext);","import React, { useEffect, useState } from 'react';\r\nimport \"./Sidebar.css\";\r\nimport SidebarChat from \"./SidebarChat\";\r\nimport { Avatar, IconButton } from \"@material-ui/core\";\r\nimport DonutLargeIcon from '@material-ui/icons/DonutLarge';\r\nimport ChatIcon from '@material-ui/icons/Chat';\r\nimport MoreVertIcon from '@material-ui/icons/MoreVert';\r\nimport SearchOutlinedIcon from '@material-ui/icons/SearchOutlined';\r\nimport db from \"./firebase\";\r\nimport { useStateValue } from './StateProvider';\r\n\r\nfunction Sidebar() {\r\n\r\n    const [rooms, setRooms] = useState([]);\r\n    const [{user}, dispatch] = useStateValue();\r\n\r\n    useEffect(() => {\r\n        db.collection(\"rooms\").onSnapshot(snapshot => (\r\n            setRooms(snapshot.docs.map(doc => ({\r\n                id: doc.id,\r\n                data: doc.data(),\r\n            })))\r\n        ));\r\n    }, []);\r\n\r\n    return (\r\n        <div className=\"sidebar\">\r\n            <div className=\"sidebar__header\">\r\n                <Avatar src={user?.photoURL} />\r\n                <div className=\"sidebar__headerRight\">\r\n                    <IconButton>\r\n                        <DonutLargeIcon />\r\n                    </IconButton>\r\n                    <IconButton>\r\n                        <ChatIcon />\r\n                    </IconButton>\r\n                    <IconButton>\r\n                        <MoreVertIcon />\r\n                    </IconButton>\r\n                </div>\r\n            </div>\r\n            <div className=\"sidebar__search\">\r\n                <div className=\"sidebar__searchContainer\">\r\n                    <SearchOutlinedIcon />\r\n                    <input placeholder=\"Search or start a New Chat\" type=\"text\" />\r\n                </div>\r\n            </div>\r\n            <div className=\"sidebar__chats\">\r\n                <SidebarChat addNewChat />\r\n                {rooms.map(room => {\r\n                    return(\r\n                        <SidebarChat \r\n                        key={room.id}\r\n                        id={room.id}\r\n                        name={room.data.name}\r\n                    />\r\n                    )\r\n                })};\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Sidebar;\r\n","import React, {useState,useEffect} from 'react';\r\nimport {Avatar, IconButton} from '@material-ui/core';\r\nimport {AttachFile, MoreVert, SearchOutlined} from '@material-ui/icons';\r\nimport MicIcon from '@material-ui/icons/Mic';\r\nimport InsertEmoticonIcon from '@material-ui/icons/InsertEmoticon';\r\nimport './Chat.css';\r\nimport { useParams } from 'react-router-dom';\r\nimport db from './firebase';\r\nimport firebase from 'firebase';\r\nimport {useStateValue} from \"./StateProvider\";\r\n\r\nfunction Chat() {\r\n    const [input, setInput] = useState(\"\");\r\n    const [seed, setSeed] = useState(\"\");\r\n    const {roomId} = useParams();\r\n    const [roomName, setRoomName] = useState(\"\");\r\n    const [messages, setMessages] = useState([]);\r\n    const [{user}, dispatch] = useStateValue();\r\n\r\n    useEffect(()=>{\r\n        if(roomId){\r\n            db.collection('rooms').doc(roomId).onSnapshot(snapshot => {\r\n                setRoomName(snapshot.data().name);\r\n            });\r\n\r\n            db.collection('rooms').doc(roomId).collection(\"messages\").orderBy(\"timestamp\",\"asc\").onSnapshot(snapshot => {\r\n                setMessages(snapshot.docs.map(doc => doc.data()))\r\n            });\r\n\r\n        }\r\n    },[roomId])\r\n\r\n    useEffect(() => {\r\n        setSeed(Math.floor(Math.random() * 5000));        \r\n    }, [roomId]);\r\n\r\n    const sendMessage = (e) => {\r\n        e.preventDefault();\r\n        db.collection('rooms').doc(roomId).collection('messages').add({\r\n            message: input,\r\n            name: user.displayName,\r\n            timestamp: firebase.firestore.FieldValue.serverTimestamp(),\r\n        })\r\n        setInput(\"\");\r\n    }\r\n\r\n    return (\r\n        <div className='chat'>\r\n            <div className='chat_header'>\r\n                <Avatar src={`https://avatars.dicebear.com/api/human/${seed}.svg`}/>\r\n                <div className='chat_headerInfo'>\r\n                    <h3 className='chat-room-name'>{roomName}</h3>\r\n                    <p className='chat-room-last-seen'>\r\n                        last seen {\" \"}\r\n                        {new Date(\r\n                            messages[messages.length - 1]?.\r\n                            timestamp?.toDate()\r\n                        ).toUTCString()}\r\n                    </p>\r\n                </div>\r\n                <div className=\"chat_headerRight\">\r\n                    <IconButton>\r\n                        <SearchOutlined/>\r\n                    </IconButton>\r\n                    <IconButton>\r\n                        <AttachFile/>\r\n                    </IconButton>\r\n                    <IconButton>\r\n                        <MoreVert/>\r\n                    </IconButton>\r\n                    \r\n                </div>\r\n            </div>\r\n            <div className='chat_body'>\r\n                {messages.map(message => (\r\n                    <p className={`chat_message ${ message.name == user.displayName && 'chat_receiver'}`}>\r\n                        <span className=\"chat_name\">{message.name}</span>\r\n                        {message.message}\r\n                        <span className=\"chat_timestemp\">{new Date(message.timestamp?.toDate()).toUTCString()}</span>\r\n                    </p>\r\n                ))}\r\n            </div>\r\n            <div className='chat_footer'>\r\n                <InsertEmoticonIcon />\r\n                <form>\r\n                    <input value={input} onChange={(e) => setInput(e.target.value)} type=\"text\" placeholder=\"Type a message\"/>\r\n                    <button type=\"submit\" onClick={sendMessage}> Send a Message</button>\r\n                </form>\r\n                <MicIcon/>\r\n            </div>\r\n            \r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Chat","export const initialState = {\r\n    user:null,\r\n};\r\n\r\nexport const actionTypes = {\r\n    SET_USER : \"SET_USER\",\r\n};\r\n\r\nconst reducer = (state, action) => {\r\n    switch(action.type) {\r\n        case actionTypes.SET_USER:\r\n            return {\r\n                ...state,\r\n                user: action.user,\r\n            };\r\n\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\nexport default reducer;","import { Button } from '@material-ui/core'\r\nimport React from 'react'\r\nimport { auth, provider } from './firebase';\r\nimport \"./Login.css\";\r\nimport { actionTypes } from './reducer';\r\nimport { useStateValue } from './StateProvider';\r\n\r\nfunction Login() {\r\n\r\n    const [{}, dispatch] = useStateValue();\r\n\r\n    const signIn = () => {\r\n        auth.signInWithPopup(provider)\r\n        .then((result) => {\r\n            dispatch({\r\n                type: actionTypes.SET_USER,\r\n                user: result.user,\r\n            });\r\n        })\r\n        .catch((err) => alert(err.message));\r\n    };\r\n\r\n    return (\r\n        <div className=\"login\">\r\n            <div className=\"login__container\">\r\n                <img \r\n                    src=\"https://upload.wikimedia.org/wikipedia/commons/thumb/6/6b/WhatsApp.svg/897px-WhatsApp.svg.png\"\r\n                    alt=\"logo\"\r\n                />\r\n                <div className=\"login__text\">\r\n                    <h1>Sign in to Whatsapp</h1>\r\n                </div>\r\n\r\n                <Button onClick={signIn}>\r\n                    Sign In with Google\r\n                </Button>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Login\r\n","import React, { useState } from \"react\";\nimport './App.css';\nimport Sidebar from \"./Sidebar\";\nimport Chat from \"./Chat\";\nimport { BrowserRouter as Router, Switch, Route } from \"react-router-dom\";\nimport Login from \"./Login\";\nimport { useStateValue } from \"./StateProvider\";\n\nfunction App() {\n\n  const [{user}, dispatch] = useStateValue();\n\n  return (\n    <div className=\"app\">\n      {!user ? (\n        <Login />\n      ) : (\n        <div className=\"app__body\">\n          <Router>\n            <Sidebar />\n            <Switch>\n\n              <Route path=\"/rooms/:roomId\">\n                <Chat />\n              </Route>\n\n              <Route path=\"/\">\n                <Chat />\n              </Route>\n\n            </Switch>\n          </Router>\n        </div>\n      )}\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport { StateProvider } from \"./StateProvider\";\nimport reducer, { initialState } from './reducer';\n\nReactDOM.render(\n  <React.StrictMode>\n    <StateProvider initialState={initialState} reducer={reducer}>\n      <App />\n    </StateProvider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}